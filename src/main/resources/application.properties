server.port=9001
name=Ashish

cred.userName=ashish1    
cred.password=ashish2   
cred.screteQuestion=ashish3
cred.screteAnswer=ashish4 
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the cloud database connection
#spring.datasource.url=jdbc:db2://dashdb-txn-sbox-yp-lon02-07.services.eu-gb.bluemix.net:50000/BLUDB
#spring.datasource.username=lch38277
#spring.datasource.password=jhfp58-9k36rgqgg
#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver
 
 # Set here configurations for the lacal database connection
#spring.datasource.url=jdbc:db2://localhost:50000/ust
#spring.datasource.username=db2admin
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver 

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ash
spring.datasource.username=root
spring.datasource.password=root
 
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
